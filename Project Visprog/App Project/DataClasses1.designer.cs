#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjectUASVisprog
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TestingVisprogFinal")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLogin_User(Login_User instance);
    partial void UpdateLogin_User(Login_User instance);
    partial void DeleteLogin_User(Login_User instance);
    partial void InsertTransaksi(Transaksi instance);
    partial void UpdateTransaksi(Transaksi instance);
    partial void DeleteTransaksi(Transaksi instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertTarif(Tarif instance);
    partial void UpdateTarif(Tarif instance);
    partial void DeleteTarif(Tarif instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::ProjectUASVisprog.Properties.Settings.Default.TestingVisprogFinalConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Login_User> Login_Users
		{
			get
			{
				return this.GetTable<Login_User>();
			}
		}
		
		public System.Data.Linq.Table<Transaksi> Transaksis
		{
			get
			{
				return this.GetTable<Transaksi>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<Tarif> Tarifs
		{
			get
			{
				return this.GetTable<Tarif>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Login_User")]
	public partial class Login_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Username;
		
		private string _Passwords;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordsChanging(string value);
    partial void OnPasswordsChanged();
    #endregion
		
		public Login_User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passwords", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Passwords
		{
			get
			{
				return this._Passwords;
			}
			set
			{
				if ((this._Passwords != value))
				{
					this.OnPasswordsChanging(value);
					this.SendPropertyChanging();
					this._Passwords = value;
					this.SendPropertyChanged("Passwords");
					this.OnPasswordsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transaksi")]
	public partial class Transaksi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _No_Resi;
		
		private string _NoResi;
		
		private string _Cust_Name;
		
		private string _Cust_Phone;
		
		private string _Cust_Address;
		
		private string _Cust_Zip;
		
		private string _Cust_City;
		
		private string _Cust_Country;
		
		private string _Rec_Name;
		
		private string _Rec_Phone;
		
		private string _Rec_Address;
		
		private string _Rec_Zip;
		
		private string _Rec_City;
		
		private string _Rec_Country;
		
		private string _Item_Type;
		
		private string _Item_Desc;
		
		private int _Item_Weight;
		
		private System.DateTime _timeLimit;
		
		private string _Staff_Id;
		
		private string _Ship_Type;
		
		private System.DateTime _Ship_Date;
		
		private string _ReceivedBy;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<Payment> _Payments;
		
		private EntityRef<Staff> _Staff;
		
		private EntityRef<Tarif> _Tarif;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNo_ResiChanging(int value);
    partial void OnNo_ResiChanged();
    partial void OnNoResiChanging(string value);
    partial void OnNoResiChanged();
    partial void OnCust_NameChanging(string value);
    partial void OnCust_NameChanged();
    partial void OnCust_PhoneChanging(string value);
    partial void OnCust_PhoneChanged();
    partial void OnCust_AddressChanging(string value);
    partial void OnCust_AddressChanged();
    partial void OnCust_ZipChanging(string value);
    partial void OnCust_ZipChanged();
    partial void OnCust_CityChanging(string value);
    partial void OnCust_CityChanged();
    partial void OnCust_CountryChanging(string value);
    partial void OnCust_CountryChanged();
    partial void OnRec_NameChanging(string value);
    partial void OnRec_NameChanged();
    partial void OnRec_PhoneChanging(string value);
    partial void OnRec_PhoneChanged();
    partial void OnRec_AddressChanging(string value);
    partial void OnRec_AddressChanged();
    partial void OnRec_ZipChanging(string value);
    partial void OnRec_ZipChanged();
    partial void OnRec_CityChanging(string value);
    partial void OnRec_CityChanged();
    partial void OnRec_CountryChanging(string value);
    partial void OnRec_CountryChanged();
    partial void OnItem_TypeChanging(string value);
    partial void OnItem_TypeChanged();
    partial void OnItem_DescChanging(string value);
    partial void OnItem_DescChanged();
    partial void OnItem_WeightChanging(int value);
    partial void OnItem_WeightChanged();
    partial void OntimeLimitChanging(System.DateTime value);
    partial void OntimeLimitChanged();
    partial void OnStaff_IdChanging(string value);
    partial void OnStaff_IdChanged();
    partial void OnShip_TypeChanging(string value);
    partial void OnShip_TypeChanged();
    partial void OnShip_DateChanging(System.DateTime value);
    partial void OnShip_DateChanged();
    partial void OnReceivedByChanging(string value);
    partial void OnReceivedByChanged();
    #endregion
		
		public Transaksi()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._Staff = default(EntityRef<Staff>);
			this._Tarif = default(EntityRef<Tarif>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No_Resi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int No_Resi
		{
			get
			{
				return this._No_Resi;
			}
			set
			{
				if ((this._No_Resi != value))
				{
					this.OnNo_ResiChanging(value);
					this.SendPropertyChanging();
					this._No_Resi = value;
					this.SendPropertyChanged("No_Resi");
					this.OnNo_ResiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoResi", AutoSync=AutoSync.Always, DbType="VarChar(9)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NoResi
		{
			get
			{
				return this._NoResi;
			}
			set
			{
				if ((this._NoResi != value))
				{
					this.OnNoResiChanging(value);
					this.SendPropertyChanging();
					this._NoResi = value;
					this.SendPropertyChanged("NoResi");
					this.OnNoResiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cust_Name
		{
			get
			{
				return this._Cust_Name;
			}
			set
			{
				if ((this._Cust_Name != value))
				{
					this.OnCust_NameChanging(value);
					this.SendPropertyChanging();
					this._Cust_Name = value;
					this.SendPropertyChanged("Cust_Name");
					this.OnCust_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Phone", DbType="Char(15) NOT NULL", CanBeNull=false)]
		public string Cust_Phone
		{
			get
			{
				return this._Cust_Phone;
			}
			set
			{
				if ((this._Cust_Phone != value))
				{
					this.OnCust_PhoneChanging(value);
					this.SendPropertyChanging();
					this._Cust_Phone = value;
					this.SendPropertyChanged("Cust_Phone");
					this.OnCust_PhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Address", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cust_Address
		{
			get
			{
				return this._Cust_Address;
			}
			set
			{
				if ((this._Cust_Address != value))
				{
					this.OnCust_AddressChanging(value);
					this.SendPropertyChanging();
					this._Cust_Address = value;
					this.SendPropertyChanged("Cust_Address");
					this.OnCust_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Zip", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string Cust_Zip
		{
			get
			{
				return this._Cust_Zip;
			}
			set
			{
				if ((this._Cust_Zip != value))
				{
					this.OnCust_ZipChanging(value);
					this.SendPropertyChanging();
					this._Cust_Zip = value;
					this.SendPropertyChanged("Cust_Zip");
					this.OnCust_ZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_City", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Cust_City
		{
			get
			{
				return this._Cust_City;
			}
			set
			{
				if ((this._Cust_City != value))
				{
					this.OnCust_CityChanging(value);
					this.SendPropertyChanging();
					this._Cust_City = value;
					this.SendPropertyChanged("Cust_City");
					this.OnCust_CityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Country", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Cust_Country
		{
			get
			{
				return this._Cust_Country;
			}
			set
			{
				if ((this._Cust_Country != value))
				{
					this.OnCust_CountryChanging(value);
					this.SendPropertyChanging();
					this._Cust_Country = value;
					this.SendPropertyChanged("Cust_Country");
					this.OnCust_CountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rec_Name", DbType="VarChar(50)")]
		public string Rec_Name
		{
			get
			{
				return this._Rec_Name;
			}
			set
			{
				if ((this._Rec_Name != value))
				{
					this.OnRec_NameChanging(value);
					this.SendPropertyChanging();
					this._Rec_Name = value;
					this.SendPropertyChanged("Rec_Name");
					this.OnRec_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rec_Phone", DbType="Char(15)")]
		public string Rec_Phone
		{
			get
			{
				return this._Rec_Phone;
			}
			set
			{
				if ((this._Rec_Phone != value))
				{
					this.OnRec_PhoneChanging(value);
					this.SendPropertyChanging();
					this._Rec_Phone = value;
					this.SendPropertyChanged("Rec_Phone");
					this.OnRec_PhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rec_Address", DbType="VarChar(50)")]
		public string Rec_Address
		{
			get
			{
				return this._Rec_Address;
			}
			set
			{
				if ((this._Rec_Address != value))
				{
					this.OnRec_AddressChanging(value);
					this.SendPropertyChanging();
					this._Rec_Address = value;
					this.SendPropertyChanged("Rec_Address");
					this.OnRec_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rec_Zip", DbType="Char(6)")]
		public string Rec_Zip
		{
			get
			{
				return this._Rec_Zip;
			}
			set
			{
				if ((this._Rec_Zip != value))
				{
					this.OnRec_ZipChanging(value);
					this.SendPropertyChanging();
					this._Rec_Zip = value;
					this.SendPropertyChanged("Rec_Zip");
					this.OnRec_ZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rec_City", DbType="VarChar(20)")]
		public string Rec_City
		{
			get
			{
				return this._Rec_City;
			}
			set
			{
				if ((this._Rec_City != value))
				{
					this.OnRec_CityChanging(value);
					this.SendPropertyChanging();
					this._Rec_City = value;
					this.SendPropertyChanged("Rec_City");
					this.OnRec_CityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rec_Country", DbType="VarChar(20)")]
		public string Rec_Country
		{
			get
			{
				return this._Rec_Country;
			}
			set
			{
				if ((this._Rec_Country != value))
				{
					this.OnRec_CountryChanging(value);
					this.SendPropertyChanging();
					this._Rec_Country = value;
					this.SendPropertyChanged("Rec_Country");
					this.OnRec_CountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Type", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Item_Type
		{
			get
			{
				return this._Item_Type;
			}
			set
			{
				if ((this._Item_Type != value))
				{
					this.OnItem_TypeChanging(value);
					this.SendPropertyChanging();
					this._Item_Type = value;
					this.SendPropertyChanged("Item_Type");
					this.OnItem_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Desc", DbType="VarChar(50)")]
		public string Item_Desc
		{
			get
			{
				return this._Item_Desc;
			}
			set
			{
				if ((this._Item_Desc != value))
				{
					this.OnItem_DescChanging(value);
					this.SendPropertyChanging();
					this._Item_Desc = value;
					this.SendPropertyChanged("Item_Desc");
					this.OnItem_DescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Weight", DbType="Int NOT NULL")]
		public int Item_Weight
		{
			get
			{
				return this._Item_Weight;
			}
			set
			{
				if ((this._Item_Weight != value))
				{
					this.OnItem_WeightChanging(value);
					this.SendPropertyChanging();
					this._Item_Weight = value;
					this.SendPropertyChanged("Item_Weight");
					this.OnItem_WeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeLimit", DbType="Date NOT NULL")]
		public System.DateTime timeLimit
		{
			get
			{
				return this._timeLimit;
			}
			set
			{
				if ((this._timeLimit != value))
				{
					this.OntimeLimitChanging(value);
					this.SendPropertyChanging();
					this._timeLimit = value;
					this.SendPropertyChanged("timeLimit");
					this.OntimeLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_Id", DbType="Char(5)")]
		public string Staff_Id
		{
			get
			{
				return this._Staff_Id;
			}
			set
			{
				if ((this._Staff_Id != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaff_IdChanging(value);
					this.SendPropertyChanging();
					this._Staff_Id = value;
					this.SendPropertyChanged("Staff_Id");
					this.OnStaff_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_Type", DbType="VarChar(10)")]
		public string Ship_Type
		{
			get
			{
				return this._Ship_Type;
			}
			set
			{
				if ((this._Ship_Type != value))
				{
					if (this._Tarif.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShip_TypeChanging(value);
					this.SendPropertyChanging();
					this._Ship_Type = value;
					this.SendPropertyChanged("Ship_Type");
					this.OnShip_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_Date", DbType="Date NOT NULL")]
		public System.DateTime Ship_Date
		{
			get
			{
				return this._Ship_Date;
			}
			set
			{
				if ((this._Ship_Date != value))
				{
					this.OnShip_DateChanging(value);
					this.SendPropertyChanging();
					this._Ship_Date = value;
					this.SendPropertyChanged("Ship_Date");
					this.OnShip_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedBy", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ReceivedBy
		{
			get
			{
				return this._ReceivedBy;
			}
			set
			{
				if ((this._ReceivedBy != value))
				{
					this.OnReceivedByChanging(value);
					this.SendPropertyChanging();
					this._ReceivedBy = value;
					this.SendPropertyChanged("ReceivedBy");
					this.OnReceivedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaksi_Order", Storage="_Orders", ThisKey="No_Resi", OtherKey="No_Resi")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaksi_Payment", Storage="_Payments", ThisKey="No_Resi", OtherKey="No_Resi")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Transaksi", Storage="_Staff", ThisKey="Staff_Id", OtherKey="Staff_ID", IsForeignKey=true)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Transaksis.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Transaksis.Add(this);
						this._Staff_Id = value.Staff_ID;
					}
					else
					{
						this._Staff_Id = default(string);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tarif_Transaksi", Storage="_Tarif", ThisKey="Ship_Type", OtherKey="Ship_type", IsForeignKey=true)]
		public Tarif Tarif
		{
			get
			{
				return this._Tarif.Entity;
			}
			set
			{
				Tarif previousValue = this._Tarif.Entity;
				if (((previousValue != value) 
							|| (this._Tarif.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tarif.Entity = null;
						previousValue.Transaksis.Remove(this);
					}
					this._Tarif.Entity = value;
					if ((value != null))
					{
						value.Transaksis.Add(this);
						this._Ship_Type = value.Ship_type;
					}
					else
					{
						this._Ship_Type = default(string);
					}
					this.SendPropertyChanged("Tarif");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Transaksi = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Transaksi = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Transaksi = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Transaksi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _No_Order;
		
		private string _NoOrder;
		
		private System.Nullable<int> _No_Resi;
		
		private string _Ship_Type;
		
		private System.Nullable<System.DateTime> _Orders_Date;
		
		private string _Status_Order;
		
		private EntityRef<Transaksi> _Transaksi;
		
		private EntityRef<Tarif> _Tarif;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNo_OrderChanging(int value);
    partial void OnNo_OrderChanged();
    partial void OnNoOrderChanging(string value);
    partial void OnNoOrderChanged();
    partial void OnNo_ResiChanging(System.Nullable<int> value);
    partial void OnNo_ResiChanged();
    partial void OnShip_TypeChanging(string value);
    partial void OnShip_TypeChanged();
    partial void OnOrders_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrders_DateChanged();
    partial void OnStatus_OrderChanging(string value);
    partial void OnStatus_OrderChanged();
    #endregion
		
		public Order()
		{
			this._Transaksi = default(EntityRef<Transaksi>);
			this._Tarif = default(EntityRef<Tarif>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No_Order", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int No_Order
		{
			get
			{
				return this._No_Order;
			}
			set
			{
				if ((this._No_Order != value))
				{
					this.OnNo_OrderChanging(value);
					this.SendPropertyChanging();
					this._No_Order = value;
					this.SendPropertyChanged("No_Order");
					this.OnNo_OrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOrder", AutoSync=AutoSync.Always, DbType="VarChar(9)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NoOrder
		{
			get
			{
				return this._NoOrder;
			}
			set
			{
				if ((this._NoOrder != value))
				{
					this.OnNoOrderChanging(value);
					this.SendPropertyChanging();
					this._NoOrder = value;
					this.SendPropertyChanged("NoOrder");
					this.OnNoOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No_Resi", DbType="Int")]
		public System.Nullable<int> No_Resi
		{
			get
			{
				return this._No_Resi;
			}
			set
			{
				if ((this._No_Resi != value))
				{
					if (this._Transaksi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNo_ResiChanging(value);
					this.SendPropertyChanging();
					this._No_Resi = value;
					this.SendPropertyChanged("No_Resi");
					this.OnNo_ResiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_Type", DbType="VarChar(10)")]
		public string Ship_Type
		{
			get
			{
				return this._Ship_Type;
			}
			set
			{
				if ((this._Ship_Type != value))
				{
					if (this._Tarif.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShip_TypeChanging(value);
					this.SendPropertyChanging();
					this._Ship_Type = value;
					this.SendPropertyChanged("Ship_Type");
					this.OnShip_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orders_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Orders_Date
		{
			get
			{
				return this._Orders_Date;
			}
			set
			{
				if ((this._Orders_Date != value))
				{
					this.OnOrders_DateChanging(value);
					this.SendPropertyChanging();
					this._Orders_Date = value;
					this.SendPropertyChanged("Orders_Date");
					this.OnOrders_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status_Order", DbType="VarChar(25)")]
		public string Status_Order
		{
			get
			{
				return this._Status_Order;
			}
			set
			{
				if ((this._Status_Order != value))
				{
					this.OnStatus_OrderChanging(value);
					this.SendPropertyChanging();
					this._Status_Order = value;
					this.SendPropertyChanged("Status_Order");
					this.OnStatus_OrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaksi_Order", Storage="_Transaksi", ThisKey="No_Resi", OtherKey="No_Resi", IsForeignKey=true)]
		public Transaksi Transaksi
		{
			get
			{
				return this._Transaksi.Entity;
			}
			set
			{
				Transaksi previousValue = this._Transaksi.Entity;
				if (((previousValue != value) 
							|| (this._Transaksi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Transaksi.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Transaksi.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._No_Resi = value.No_Resi;
					}
					else
					{
						this._No_Resi = default(Nullable<int>);
					}
					this.SendPropertyChanged("Transaksi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tarif_Order", Storage="_Tarif", ThisKey="Ship_Type", OtherKey="Ship_type", IsForeignKey=true)]
		public Tarif Tarif
		{
			get
			{
				return this._Tarif.Entity;
			}
			set
			{
				Tarif previousValue = this._Tarif.Entity;
				if (((previousValue != value) 
							|| (this._Tarif.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tarif.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Tarif.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._Ship_Type = value.Ship_type;
					}
					else
					{
						this._Ship_Type = default(string);
					}
					this.SendPropertyChanged("Tarif");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _No_Payment;
		
		private string _NoPayment;
		
		private System.Nullable<int> _No_Resi;
		
		private int _Item_Weight;
		
		private string _Ship_Type;
		
		private System.Nullable<int> _SubTotal;
		
		private string _Pay_Method;
		
		private EntityRef<Transaksi> _Transaksi;
		
		private EntityRef<Tarif> _Tarif;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNo_PaymentChanging(int value);
    partial void OnNo_PaymentChanged();
    partial void OnNoPaymentChanging(string value);
    partial void OnNoPaymentChanged();
    partial void OnNo_ResiChanging(System.Nullable<int> value);
    partial void OnNo_ResiChanged();
    partial void OnItem_WeightChanging(int value);
    partial void OnItem_WeightChanged();
    partial void OnShip_TypeChanging(string value);
    partial void OnShip_TypeChanged();
    partial void OnSubTotalChanging(System.Nullable<int> value);
    partial void OnSubTotalChanged();
    partial void OnPay_MethodChanging(string value);
    partial void OnPay_MethodChanged();
    #endregion
		
		public Payment()
		{
			this._Transaksi = default(EntityRef<Transaksi>);
			this._Tarif = default(EntityRef<Tarif>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No_Payment", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int No_Payment
		{
			get
			{
				return this._No_Payment;
			}
			set
			{
				if ((this._No_Payment != value))
				{
					this.OnNo_PaymentChanging(value);
					this.SendPropertyChanging();
					this._No_Payment = value;
					this.SendPropertyChanged("No_Payment");
					this.OnNo_PaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoPayment", AutoSync=AutoSync.Always, DbType="VarChar(9)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string NoPayment
		{
			get
			{
				return this._NoPayment;
			}
			set
			{
				if ((this._NoPayment != value))
				{
					this.OnNoPaymentChanging(value);
					this.SendPropertyChanging();
					this._NoPayment = value;
					this.SendPropertyChanged("NoPayment");
					this.OnNoPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No_Resi", DbType="Int")]
		public System.Nullable<int> No_Resi
		{
			get
			{
				return this._No_Resi;
			}
			set
			{
				if ((this._No_Resi != value))
				{
					if (this._Transaksi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNo_ResiChanging(value);
					this.SendPropertyChanging();
					this._No_Resi = value;
					this.SendPropertyChanged("No_Resi");
					this.OnNo_ResiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Weight", DbType="Int NOT NULL")]
		public int Item_Weight
		{
			get
			{
				return this._Item_Weight;
			}
			set
			{
				if ((this._Item_Weight != value))
				{
					this.OnItem_WeightChanging(value);
					this.SendPropertyChanging();
					this._Item_Weight = value;
					this.SendPropertyChanged("Item_Weight");
					this.OnItem_WeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_Type", DbType="VarChar(10)")]
		public string Ship_Type
		{
			get
			{
				return this._Ship_Type;
			}
			set
			{
				if ((this._Ship_Type != value))
				{
					if (this._Tarif.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShip_TypeChanging(value);
					this.SendPropertyChanging();
					this._Ship_Type = value;
					this.SendPropertyChanged("Ship_Type");
					this.OnShip_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubTotal", DbType="Int")]
		public System.Nullable<int> SubTotal
		{
			get
			{
				return this._SubTotal;
			}
			set
			{
				if ((this._SubTotal != value))
				{
					this.OnSubTotalChanging(value);
					this.SendPropertyChanging();
					this._SubTotal = value;
					this.SendPropertyChanged("SubTotal");
					this.OnSubTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pay_Method", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Pay_Method
		{
			get
			{
				return this._Pay_Method;
			}
			set
			{
				if ((this._Pay_Method != value))
				{
					this.OnPay_MethodChanging(value);
					this.SendPropertyChanging();
					this._Pay_Method = value;
					this.SendPropertyChanged("Pay_Method");
					this.OnPay_MethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Transaksi_Payment", Storage="_Transaksi", ThisKey="No_Resi", OtherKey="No_Resi", IsForeignKey=true)]
		public Transaksi Transaksi
		{
			get
			{
				return this._Transaksi.Entity;
			}
			set
			{
				Transaksi previousValue = this._Transaksi.Entity;
				if (((previousValue != value) 
							|| (this._Transaksi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Transaksi.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Transaksi.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._No_Resi = value.No_Resi;
					}
					else
					{
						this._No_Resi = default(Nullable<int>);
					}
					this.SendPropertyChanged("Transaksi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tarif_Payment", Storage="_Tarif", ThisKey="Ship_Type", OtherKey="Ship_type", IsForeignKey=true)]
		public Tarif Tarif
		{
			get
			{
				return this._Tarif.Entity;
			}
			set
			{
				Tarif previousValue = this._Tarif.Entity;
				if (((previousValue != value) 
							|| (this._Tarif.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tarif.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Tarif.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._Ship_Type = value.Ship_type;
					}
					else
					{
						this._Ship_Type = default(string);
					}
					this.SendPropertyChanged("Tarif");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Staff_ID;
		
		private string _Staff_Name;
		
		private string _Staff_Gender;
		
		private System.DateTime _Staff_DOB;
		
		private string _Staff_Position;
		
		private string _Staff_Phone;
		
		private string _Staff_Email;
		
		private EntitySet<Transaksi> _Transaksis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaff_IDChanging(string value);
    partial void OnStaff_IDChanged();
    partial void OnStaff_NameChanging(string value);
    partial void OnStaff_NameChanged();
    partial void OnStaff_GenderChanging(string value);
    partial void OnStaff_GenderChanged();
    partial void OnStaff_DOBChanging(System.DateTime value);
    partial void OnStaff_DOBChanged();
    partial void OnStaff_PositionChanging(string value);
    partial void OnStaff_PositionChanged();
    partial void OnStaff_PhoneChanging(string value);
    partial void OnStaff_PhoneChanged();
    partial void OnStaff_EmailChanging(string value);
    partial void OnStaff_EmailChanged();
    #endregion
		
		public Staff()
		{
			this._Transaksis = new EntitySet<Transaksi>(new Action<Transaksi>(this.attach_Transaksis), new Action<Transaksi>(this.detach_Transaksis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_ID", DbType="Char(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Staff_ID
		{
			get
			{
				return this._Staff_ID;
			}
			set
			{
				if ((this._Staff_ID != value))
				{
					this.OnStaff_IDChanging(value);
					this.SendPropertyChanging();
					this._Staff_ID = value;
					this.SendPropertyChanged("Staff_ID");
					this.OnStaff_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Staff_Name
		{
			get
			{
				return this._Staff_Name;
			}
			set
			{
				if ((this._Staff_Name != value))
				{
					this.OnStaff_NameChanging(value);
					this.SendPropertyChanging();
					this._Staff_Name = value;
					this.SendPropertyChanged("Staff_Name");
					this.OnStaff_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_Gender", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Staff_Gender
		{
			get
			{
				return this._Staff_Gender;
			}
			set
			{
				if ((this._Staff_Gender != value))
				{
					this.OnStaff_GenderChanging(value);
					this.SendPropertyChanging();
					this._Staff_Gender = value;
					this.SendPropertyChanged("Staff_Gender");
					this.OnStaff_GenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_DOB", DbType="Date NOT NULL")]
		public System.DateTime Staff_DOB
		{
			get
			{
				return this._Staff_DOB;
			}
			set
			{
				if ((this._Staff_DOB != value))
				{
					this.OnStaff_DOBChanging(value);
					this.SendPropertyChanging();
					this._Staff_DOB = value;
					this.SendPropertyChanged("Staff_DOB");
					this.OnStaff_DOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_Position", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Staff_Position
		{
			get
			{
				return this._Staff_Position;
			}
			set
			{
				if ((this._Staff_Position != value))
				{
					this.OnStaff_PositionChanging(value);
					this.SendPropertyChanging();
					this._Staff_Position = value;
					this.SendPropertyChanged("Staff_Position");
					this.OnStaff_PositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_Phone", DbType="Char(15) NOT NULL", CanBeNull=false)]
		public string Staff_Phone
		{
			get
			{
				return this._Staff_Phone;
			}
			set
			{
				if ((this._Staff_Phone != value))
				{
					this.OnStaff_PhoneChanging(value);
					this.SendPropertyChanging();
					this._Staff_Phone = value;
					this.SendPropertyChanged("Staff_Phone");
					this.OnStaff_PhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Staff_Email", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Staff_Email
		{
			get
			{
				return this._Staff_Email;
			}
			set
			{
				if ((this._Staff_Email != value))
				{
					this.OnStaff_EmailChanging(value);
					this.SendPropertyChanging();
					this._Staff_Email = value;
					this.SendPropertyChanged("Staff_Email");
					this.OnStaff_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Transaksi", Storage="_Transaksis", ThisKey="Staff_ID", OtherKey="Staff_Id")]
		public EntitySet<Transaksi> Transaksis
		{
			get
			{
				return this._Transaksis;
			}
			set
			{
				this._Transaksis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transaksis(Transaksi entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Transaksis(Transaksi entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tarif")]
	public partial class Tarif : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Ship_type;
		
		private System.Nullable<int> _Distance;
		
		private System.Nullable<float> _Ship_Fee;
		
		private System.Nullable<float> _Dist_Fee;
		
		private EntitySet<Transaksi> _Transaksis;
		
		private EntitySet<Order> _Orders;
		
		private EntitySet<Payment> _Payments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShip_typeChanging(string value);
    partial void OnShip_typeChanged();
    partial void OnDistanceChanging(System.Nullable<int> value);
    partial void OnDistanceChanged();
    partial void OnShip_FeeChanging(System.Nullable<float> value);
    partial void OnShip_FeeChanged();
    partial void OnDist_FeeChanging(System.Nullable<float> value);
    partial void OnDist_FeeChanged();
    #endregion
		
		public Tarif()
		{
			this._Transaksis = new EntitySet<Transaksi>(new Action<Transaksi>(this.attach_Transaksis), new Action<Transaksi>(this.detach_Transaksis));
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_type", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ship_type
		{
			get
			{
				return this._Ship_type;
			}
			set
			{
				if ((this._Ship_type != value))
				{
					this.OnShip_typeChanging(value);
					this.SendPropertyChanging();
					this._Ship_type = value;
					this.SendPropertyChanged("Ship_type");
					this.OnShip_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distance", DbType="Int")]
		public System.Nullable<int> Distance
		{
			get
			{
				return this._Distance;
			}
			set
			{
				if ((this._Distance != value))
				{
					this.OnDistanceChanging(value);
					this.SendPropertyChanging();
					this._Distance = value;
					this.SendPropertyChanged("Distance");
					this.OnDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ship_Fee", DbType="Real")]
		public System.Nullable<float> Ship_Fee
		{
			get
			{
				return this._Ship_Fee;
			}
			set
			{
				if ((this._Ship_Fee != value))
				{
					this.OnShip_FeeChanging(value);
					this.SendPropertyChanging();
					this._Ship_Fee = value;
					this.SendPropertyChanged("Ship_Fee");
					this.OnShip_FeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dist_Fee", DbType="Real")]
		public System.Nullable<float> Dist_Fee
		{
			get
			{
				return this._Dist_Fee;
			}
			set
			{
				if ((this._Dist_Fee != value))
				{
					this.OnDist_FeeChanging(value);
					this.SendPropertyChanging();
					this._Dist_Fee = value;
					this.SendPropertyChanged("Dist_Fee");
					this.OnDist_FeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tarif_Transaksi", Storage="_Transaksis", ThisKey="Ship_type", OtherKey="Ship_Type")]
		public EntitySet<Transaksi> Transaksis
		{
			get
			{
				return this._Transaksis;
			}
			set
			{
				this._Transaksis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tarif_Order", Storage="_Orders", ThisKey="Ship_type", OtherKey="Ship_Type")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tarif_Payment", Storage="_Payments", ThisKey="Ship_type", OtherKey="Ship_Type")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Transaksis(Transaksi entity)
		{
			this.SendPropertyChanging();
			entity.Tarif = this;
		}
		
		private void detach_Transaksis(Transaksi entity)
		{
			this.SendPropertyChanging();
			entity.Tarif = null;
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Tarif = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Tarif = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Tarif = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Tarif = null;
		}
	}
}
#pragma warning restore 1591
